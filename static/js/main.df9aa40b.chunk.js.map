{"version":3,"sources":["components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","onClick","children","Component","Searchbar","state","name","handleChange","event","value","setState","handleSubmit","preventDefault","trim","toast","error","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","defaultProps","ImageGallery","prevProps","prevState","console","log","fetch","then","res","json","hits","map","id","webformatURL","tags","src","alt","App","showModal","toggleModal","handleFormSubmit","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df9aa40b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    // console.log(e.code);\n\n    if (e.code === 'Escape') {\n      // console.log('pressed Escape, modal must be closed');\n\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      // console.log('clicked to backdrop');\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\n// import { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n  state = {\n    name: '',\n    // number: '',\n  };\n\n  static propTypes = {\n    //\n  };\n\n  static defaultProps = {};\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    // this.setState({ name: event.currentTarget.value.toLoverCace() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n\n    // console.log(name);\n\n    if (name.trim() === '') {\n      toast.error('Enter data !!!');\n      // alert('Enter data !!!');\n    } else {\n      this.props.onSubmit(name);\n\n      this.setState({ name: '' });\n    }\n  };\n\n  render() {\n    // const { name } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              {/* <ImSearch style={{ marginRight: 8 }} /> */}\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport './ImageGallery.css';\n// import { toast } from 'react-toastify';\n// import ImageGalleryItem from '../ImageGalleryItem';\n// import Button from '../Button';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// import Loader from 'react-loader-spinner';\n\nclass ImageGallery extends Component {\n  state = {\n    name: [],\n  };\n  static propTypes = {};\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevItem = prevProps.name;\n    const nextItem = this.props.name;\n\n    if (prevItem !== nextItem) {\n      // console.log('prevProps.name: ', prevProps.name);\n      // console.log('this.props.name: ', this.props.name);\n      console.log('name was changed:)');\n      fetch(\n        `https://pixabay.com/api/?q=${this.props.name}&page=1&key=19199733-53a137615acbd00e25277177c&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then(res => res.json())\n        .then(name => this.setState({ name }));\n      console.log(this.state.name.hits);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {this.state.name.hits &&\n            this.state.name.hits.map(({ id, webformatURL, tags }) => (\n              <li className=\"ImageGalleryItem\">\n                <img\n                  src={webformatURL}\n                  alt={tags}\n                  className=\"ImageGalleryItem-image\"\n                />\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    name: '',\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleFormSubmit = name => {\n    this.setState({ name });\n    // console.log('name:', name);\n  };\n\n  render() {\n    const { showModal } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        <button className=\"Button\" type=\"button\" onClick={this.toggleModal}>\n          Open modal\n        </button>\n\n        <ImageGallery name={this.state.name} />\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <button className=\"Button\" type=\"button\" onClick={this.toggleModal}>\n              Close modal\n            </button>\n            <h1>modal content</h1>\n            <img src=\"\" alt=\"\" />\n          </Modal>\n        )}\n        <ToastContainer autoClose={2500} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}