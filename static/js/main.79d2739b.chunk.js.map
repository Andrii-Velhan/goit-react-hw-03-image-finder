{"version":3,"sources":["components/Searchbar/Searchbar.js","services/apiService.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","name","handleChange","event","target","value","setState","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","api","fetchImg","page","query","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","id","src","alt","onClickItem","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","Button","onLoadMore","Status","ImageGallery","item","status","per_page","showModal","largeImage","nextQuery","pixabayAPI","hits","length","prevState","catch","handleBtnClick","a","incrementPage","onScroll","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","reset","prevProps","prevQuery","color","height","width","timeout","message","map","webformatURL","largeImageURL","tags","image","App","handleFormSubmit","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79d2739b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n// import { v4 as uuidv4 } from 'uuid';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n  state = {\n    name: '',\n    // number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {};\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    // this.setState({ name: event.currentTarget.value.toLoverCace() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n\n    // console.log(name);\n\n    if (name.trim() === '') {\n      toast.error('Enter data !!!');\n      // alert('Enter data !!!');\n    } else {\n      this.props.onSubmit(name);\n\n      this.setState({ name: '' });\n    }\n  };\n\n  render() {\n    // const { name } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              {/* <ImSearch style={{ marginRight: 8 }} /> */}\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Searchbar;\n","const BASE_URL = `https://pixabay.com/api/`;\nconst MY_KEY = `19199733-53a137615acbd00e25277177c`;\nconst PER_PAGE = 12;\n\nexport function fetchImg(page, query) {\n  const url = `${BASE_URL}/?q=${query}&page=${page}&key=${MY_KEY}&image_type_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Image ${query} not found!`));\n  });\n}\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ id, src, alt, url, onClickItem }) {\n  return (\n    <li key={id} className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => onClickItem({ url, alt })}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  // id: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  onClickItem: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    // console.log(e.code);\n\n    if (e.code === 'Escape') {\n      // console.log('pressed Escape, modal must be closed');\n\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      // console.log('clicked to backdrop');\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    // const { src, alt } = this.props.image;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          {this.props.children}\n          {/* <img src={src} alt={alt} /> */}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ onLoadMore }) => (\n  <div className=\"Button-container\">\n    <button className=\"Button\" type=\"button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  </div>\n);\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pixabayAPI from '../../services/apiService';\nimport './ImageGallery.css';\nimport { toast } from 'react-toastify';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Modal from '../Modal';\nimport { MdClear } from 'react-icons/md';\nimport Button from '../Button';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nclass ImageGallery extends Component {\n  state = {\n    item: [],\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n    per_page: 12,\n    showModal: false,\n    largeImage: {\n      url: '',\n      alt: '',\n    },\n  };\n\n  static propTypes = {\n    query: PropTypes.string,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const nextQuery = this.props.query;\n\n    if (prevQuery !== nextQuery) {\n      await this.reset();\n      this.setState({ status: Status.PENDING });\n      this.fetch(nextQuery);\n    }\n  }\n\n  fetch = nextQuery => {\n    const { page } = this.state;\n    pixabayAPI\n      .fetchImg(page, nextQuery)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          return Promise.reject(new Error('Images not found!'));\n        }\n\n        this.setState(prevState => ({\n          item: [...prevState.item, ...hits],\n          status: Status.RESOLVED,\n        }));\n      })\n      .catch(error => this.setState({ error, status: Status.REJECTED }));\n  };\n\n  handleBtnClick = async () => {\n    const nextQuery = this.props.query;\n    await this.incrementPage();\n    this.fetch(nextQuery);\n    this.onScroll();\n  };\n\n  onScroll = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  onClickItem = props => {\n    this.setState({\n      largeImage: props,\n    });\n    this.toggleModal();\n  };\n\n  incrementPage = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  reset = () => {\n    this.setState({ page: 1, item: [], largeImage: { url: '', alt: '' } });\n  };\n\n  render() {\n    const { item, error, status, showModal, largeImage } = this.state;\n    // const { query } = this.props;\n\n    if (status === 'idle') {\n      return <></>;\n    }\n\n    if (status === 'pending') {\n      return (\n        <div className=\"Loader\">\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={200}\n            width={200}\n            timeout={3000}\n          />\n        </div>\n      );\n    }\n\n    if (status === 'rejected') {\n      return toast.error(`${error.message}`);\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {item.map(({ id, webformatURL, largeImageURL, tags }) => (\n              <ImageGalleryItem\n                key={id}\n                src={webformatURL}\n                url={largeImageURL}\n                alt={tags}\n                onClickItem={this.onClickItem}\n              />\n            ))}\n          </ul>\n          {showModal && (\n            <Modal image={largeImage} onClose={this.toggleModal}>\n              <MdClear\n                className=\"btn-close\"\n                type=\"button\"\n                onClick={this.toggleModal}\n              />\n              <img src={largeImage.url} alt={largeImage.alt} />\n            </Modal>\n          )}\n          {\n            // item.length > 12 &&\n            <Button onLoadMore={this.handleBtnClick} />\n          }\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n// import Button from './components/Button';\n\nclass App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n    // console.log('query:', name);\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        <ImageGallery query={this.state.query} />\n\n        <ToastContainer autoClose={2500} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}