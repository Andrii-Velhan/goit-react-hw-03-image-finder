{"version":3,"sources":["components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","onClick","children","Component","App","state","showModal","toggleModal","setState","type","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0SAIMA,G,YAAYC,SAASC,cAAc,gBAEpBC,E,4MASnBC,cAAgB,SAAAC,GAGC,WAAXA,EAAEC,MAGJ,EAAKC,MAAMC,W,EAIfC,oBAAsB,SAAAJ,GAChBA,EAAEK,gBAAkBL,EAAEM,QAExB,EAAKJ,MAAMC,W,kEApBbI,OAAOC,iBAAiB,UAAWC,KAAKV,iB,6CAIxCQ,OAAOG,oBAAoB,UAAWD,KAAKV,iB,+BAqB3C,OAAOY,uBACL,qBAAKC,UAAU,UAAUC,QAASJ,KAAKL,oBAAvC,SACE,qBAAKQ,UAAU,QAAf,SAAwBH,KAAKP,MAAMY,aAErCnB,O,GA/B6BoB,aC6BpBC,E,4MA9BbC,MAAQ,CACNC,WAAW,G,EAGbC,YAAc,WACZ,EAAKC,UAAS,kBAAoB,CAAEF,WAAtB,EAAGA,e,uDAGT,IACAA,EAAcT,KAAKQ,MAAnBC,UACR,OACE,qCACE,wBAAQN,UAAU,SAASS,KAAK,SAASR,QAASJ,KAAKU,YAAvD,wBAICD,GACC,eAAC,EAAD,CAAOf,QAASM,KAAKU,YAArB,UACE,wBAAQP,UAAU,SAASS,KAAK,SAASR,QAASJ,KAAKU,YAAvD,yBAGA,+CACA,qBAAKG,IAAI,GAAGC,IAAI,e,GAvBVR,aCQHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,SAM1BZ,M","file":"static/js/main.81691d2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    // console.log(e.code);\n\n    if (e.code === 'Escape') {\n      // console.log('pressed Escape, modal must be closed');\n\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      // console.log('clicked to backdrop');\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { showModal } = this.state;\n    return (\n      <>\n        <button className=\"Button\" type=\"button\" onClick={this.toggleModal}>\n          Open modal\n        </button>\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <button className=\"Button\" type=\"button\" onClick={this.toggleModal}>\n              Close modal\n            </button>\n            <h1>modal content</h1>\n            <img src=\"\" alt=\"\" />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}